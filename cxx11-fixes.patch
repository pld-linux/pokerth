From a7cc33e89a97e73d39ecd1697d2ba646d5c639da Mon Sep 17 00:00:00 2001
From: Felix Hammer <f.hammer@web.de>
Date: Wed, 19 Aug 2015 14:52:11 +0200
Subject: [PATCH] android compile fix, needs to be approved by lotodore

---
 pokerth_qml-client.pro           |  1 -
 src/net/common/sessiondata.cpp   |  5 +++--
 src/net/common/websendbuffer.cpp | 12 +++++++-----
 src/net/serveracceptwebhelper.h  |  5 +++--
 4 files changed, 13 insertions(+), 10 deletions(-)

#diff --git a/pokerth_qml-client.pro b/pokerth_qml-client.pro
#index 6e5223f..eec1feb 100644
#--- a/pokerth_qml-client.pro
#+++ b/pokerth_qml-client.pro
#@@ -6,7 +6,6 @@ isEmpty( PREFIX ){
# DEFINES += PREFIX=\"$${PREFIX}\"
# 
# TEMPLATE = app
#-TARGET = pokerth
# CODECFORSRC = UTF-8
# QT += core qml quick widgets svg sql
# CONFIG += qt thread embed_manifest_exe exceptions rtti stl warn_on
diff --git a/src/net/common/sessiondata.cpp b/src/net/common/sessiondata.cpp
index 06f7146..69bcdb7 100644
--- a/src/net/common/sessiondata.cpp
+++ b/src/net/common/sessiondata.cpp
@@ -318,8 +318,9 @@ void
 SessionData::CloseWebSocketHandle()
 {
 	if (m_webData) {
-		boost::system::error_code ec;
-		m_webData->webSocketServer->close(m_webData->webHandle, websocketpp::close::status::normal, "PokerTH server closed the connection.", ec);
+//		boost::system::error_code ec;
+        std::error_code std_ec;
+        m_webData->webSocketServer->close(m_webData->webHandle, websocketpp::close::status::normal, "PokerTH server closed the connection.", std_ec);
 	}
 }
 
diff --git a/src/net/common/websendbuffer.cpp b/src/net/common/websendbuffer.cpp
index 2ba665a..3130373 100644
--- a/src/net/common/websendbuffer.cpp
+++ b/src/net/common/websendbuffer.cpp
@@ -57,9 +57,10 @@ void
 WebSendBuffer::AsyncSendNextPacket(boost::shared_ptr<SessionData> session)
 {
 	if (closeAfterSend) {
-		boost::system::error_code ec;
+//		boost::system::error_code ec;
+        std::error_code std_ec;
 		boost::shared_ptr<WebSocketData> webData = session->GetWebData();
-		webData->webSocketServer->close(webData->webHandle, websocketpp::close::status::normal, "PokerTH server closed the connection.", ec);
+        webData->webSocketServer->close(webData->webHandle, websocketpp::close::status::normal, "PokerTH server closed the connection.", std_ec);
 	}
 }
 
@@ -70,10 +71,11 @@ WebSendBuffer::InternalStorePacket(boost::shared_ptr<SessionData> session, boost
 	google::protobuf::uint8 *buf = new google::protobuf::uint8[packetSize];
 	packet->GetMsg()->SerializeWithCachedSizesToArray(buf);
 
-	boost::system::error_code ec;
+//	boost::system::error_code ec;
+    std::error_code std_ec;
 	boost::shared_ptr<WebSocketData> webData = session->GetWebData();
-	webData->webSocketServer->send(webData->webHandle, string((const char *)buf, packetSize), websocketpp::frame::opcode::BINARY, ec);
-	if (ec) {
+    webData->webSocketServer->send(webData->webHandle, string((const char *)buf, packetSize), websocketpp::frame::opcode::BINARY, std_ec);
+    if (std_ec) {
 		SetCloseAfterSend();
 	}
 
diff --git a/src/net/serveracceptwebhelper.h b/src/net/serveracceptwebhelper.h
index a1d371e..f7e8123 100644
--- a/src/net/serveracceptwebhelper.h
+++ b/src/net/serveracceptwebhelper.h
@@ -37,7 +37,8 @@
 #include <net/serveracceptinterface.h>
 #include <net/serverlobbythread.h>
 
-#include <boost/smart_ptr/owner_less.hpp>
+//#include <boost/smart_ptr/owner_less.hpp>
+#include <memory>
 
 class ServerAcceptWebHelper : public ServerAcceptInterface
 {
@@ -52,7 +53,7 @@ class ServerAcceptWebHelper : public ServerAcceptInterface
 
 protected:
 
-    typedef std::map<websocketpp::connection_hdl, boost::weak_ptr<SessionData>, boost::owner_less<websocketpp::connection_hdl> > SessionMap;
+    typedef std::map<websocketpp::connection_hdl, boost::weak_ptr<SessionData>, std::owner_less<websocketpp::connection_hdl> > SessionMap;
 
 	bool validate(websocketpp::connection_hdl hdl);
 	void on_open(websocketpp::connection_hdl hdl);
